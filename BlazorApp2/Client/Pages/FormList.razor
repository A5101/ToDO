@page "/forms"
@using BlazorApp2.Client.Pages
@using System.Text.Json;
@inject HttpClient client
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
<h3>FormList</h3>

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Create new Form
</button>

<div class="modal" id="exampleModal" tabindex="-1">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <input type="text" autocomplete="off" class="form-control" name="example-text-input" placeholder="Your form name" @bind="newFormName" />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" data-bs-dismiss="modal" @onclick="CreateForm" disabled="@string.IsNullOrWhiteSpace(newFormName)">Сохранить</button>
                <button class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>




@if (!list.Any())
{
    <h3>Форм еще нет</h3>
}
else
{
    @foreach (var form in list)
    {
        <h3 class="mt-2">@form.Name</h3>
        <div class="border border-dark mt-1 ms-1 " style="width:250px;height:300px">
            <a class="btn btn-primary ms-1 mt-2 mb-2 d-inline-block" href=@($"gridzone/{form.Id}")>
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-edit" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1"></path>
                    <path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z"></path>
                    <path d="M16 5l3 3"></path>
                </svg>
            </a>
            <button class="btn primary-btn d-inline-block" @onclick="() => DeleteForm(form.Id.ToString())">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="12" height="12" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M4 7l16 0"></path>
                    <path d="M10 11l0 6"></path>
                    <path d="M14 11l0 6"></path>
                    <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                    <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                </svg>
            </button>
            @* <a class="btn btn-primary ms-1 mt-2 mb-2 d-inline-block" href=@($"forma/{form.Name}")>
                Заполнить
            </a> *@
            <button @onclick="() => NavigateToNewPage(form.Name)">Перейти на новую страницу</button>
            @*  <hr class="line">
    <div class="" style="width:250px;height:250px">
    @foreach (var item in form.Templates)
    {


    @if (item.Type == "TextBox")
    {
    <div class="d-inline-block" style=@($"position:absolute;width:{item.Width/3}px;height:{item.Height/3}px; margin-top:{item.MarginTop/3}px; margin-left:{item.MarginLeft/3}px;")>
    <img draggable="false" src="images/input.jpg">
    </div>
    }
    else if (item.Type == "RadioButton")
    {
    <div class="d-inline-block" style=@($"position:absolute;width:{item.Width/3}px;height:{item.Height/3}px; margin-top:{item.MarginTop/3}px; margin-left:{item.MarginLeft/3}px;")>
    <img width=@item.Width height=@item.Height src="images/radioButton.jpg">
    </div>
    }
    else if (item.Type == "ComboBox")
    {
    <div class="d-inline-block" style=@($"position:absolute;width:{item.Width/3}px;height:{item.Height/3}px; margin-top:{item.MarginTop/3}px; margin-left:{item.MarginLeft/3}px;")>
    <img width=@item.Width height=@item.Height src="images/comboBox.jpg">
    </div>
    }



    }
    </div> *@
        </div>
    }

}

@code {
    private List<Form> list = new List<Form>();

    private string newFormName = "";



    private async Task CreateForm()
    {
        if (!string.IsNullOrEmpty(newFormName))
        {
            var form = new Form() { Id = Guid.NewGuid(), Name = newFormName };
            await client.PutAsJsonAsync<Form>("api/Form", form);
            newFormName = "";

            await Refresh();
        }
    }
    private async Task DeleteForm(string id)
    {
        await client.DeleteAsync($"api/Form?id={id}");
        Refresh();
    }


    protected async override Task OnInitializedAsync()
    {
        await Refresh();
    }

    private async Task Refresh()
    {
        list = await client.GetFromJsonAsync<List<Form>>("api/Form");
        StateHasChanged();
    }
    private void NavigateToNewPage(string name)
    {
        var clas = "BlazorApp2.Client." + name;
        var type = Type.GetType(clas, false, true);
        var obj = Activator.CreateInstance(type);

        List<object> dick = new List<object>();
       dick.Add(obj); dick.Add(name);
        
        var items = JsonSerializer.Serialize(dick);
        NavigationManager.NavigateTo($"/form/{Uri.EscapeDataString(items)}");
    }
}

<style>
    .line {
        color: #000000 !important;
        height: 1px !important;
        margin-left: 0rem;
        margin-right: 0rem;
        margin-top: 0rem;
        margin-bottom: 0rem;
    }

    .modalStyle {
        width: 400px;
        top: 50px;
    }

    .modal-content {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        padding: 20px;
    }

    .modal-header {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border-radius: 5px 5px 0 0;
    }

    .modal-footer {
        background-color: #f8f9fa;
        padding: 10px 20px;
        border-radius: 0 0 5px 5px;
        text-align: right;
    }


    .btn-primary {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #ccc;
        color: #000;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
    }

        .btn-secondary:hover {
            background-color: #b3b3b3;
        }
</style>
